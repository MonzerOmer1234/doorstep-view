{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "description": "API Documentation",
        "version": "1.0.0"
    },
    "paths": {
        "/api/agents": {
            "post": {
                "tags": [
                    "Store agents"
                ],
                "summary": "creates a new agent in the database",
                "description": "creating an agent",
                "operationId": "30b8068ffaa6f8a847059c29d17ad684",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Create an agent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "agent is created successfully!"
                                        },
                                        "agent": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/amenities": {
            "get": {
                "tags": [
                    "All Amenities"
                ],
                "summary": "Display a listing of the resource.",
                "description": "getting all amenities",
                "operationId": "c376de6613d86f5a15e91816bdebd82c",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching all amenities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "amenities are fetched successfully!"
                                        },
                                        "amenities": {
                                            "properties": {
                                                "name": {
                                                    "type": "integer",
                                                    "example": "wifi"
                                                },
                                                "icon": {
                                                    "type": "string",
                                                    "example": "icon"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "category 1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Create an amenity"
                ],
                "summary": "Store a newly created resource in storage.",
                "description": "craete an amenity",
                "operationId": "0554bae506a572032c10e0df028b92c1",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "icon 1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "create an amenity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "the amenity is created successfully!"
                                        },
                                        "agents": {
                                            "properties": {
                                                "icon": {
                                                    "type": "integer",
                                                    "example": "icon"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "wifi"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "cateory 2"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/amenities/{amenity}": {
            "put": {
                "tags": [
                    "Update amenity"
                ],
                "summary": "Update the specified resource in storage.",
                "description": "Update amenity",
                "operationId": "703a9127558e029b6ce36cd3c484eb2a",
                "parameters": [
                    {
                        "name": "amenity",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "icon 1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updating amenity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The amenity is updated successfully!"
                                        },
                                        "amenity": {
                                            "properties": {
                                                "icon": {
                                                    "type": "integer",
                                                    "example": "icon"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "wifi"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "cat 2"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Delete amenity"
                ],
                "summary": "Remove the specified resource from storage.",
                "description": "Deleting amenity",
                "operationId": "416c4ac01a0c6dfd362e5bc35e9f4963",
                "parameters": [
                    {
                        "name": "amenity",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleting amenity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "amenity is deleted successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/properties/{propertyId}/amenities": {
            "get": {
                "tags": [
                    "Nearby amenities"
                ],
                "description": "get nearby amenities",
                "operationId": "22bef46d04bb6bca3ec8cae8f99f0382",
                "parameters": [
                    {
                        "name": "propertyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get nearby amenities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "property": {
                                            "properties": {
                                                "title": {
                                                    "type": "integer",
                                                    "example": "villa"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "beside somewhere"
                                                },
                                                "price": {
                                                    "type": "string",
                                                    "example": "$1000"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "amenities": {
                                            "properties": {
                                                "icon": {
                                                    "type": "integer",
                                                    "example": "icon"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "wifi"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "cat 2"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/api-keys": {
            "get": {
                "tags": [
                    "Api Key"
                ],
                "summary": "Display a listing of the resource.",
                "description": "getting The api key that is not revoked",
                "operationId": "48d6f21fc4f70c87bb9e0fe128fc333d",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "getting The api key that is not revoked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Api key is fetched successfully!"
                                        },
                                        "api_key": {
                                            "properties": {
                                                "key": {
                                                    "type": "string",
                                                    "example": "xazsdscdssertyyu"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "type 1"
                                                },
                                                "is_revoked": {
                                                    "type": "boolean",
                                                    "example": "false"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/agents/register": {
            "post": {
                "tags": [
                    "Agent Registeration"
                ],
                "summary": "Registers a new agent",
                "description": "Registers a new agent",
                "operationId": "76e86d0ddf98d6a80f6ff10842f8e209",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "2345677uu"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "2345677uu"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "+249961077805"
                                    },
                                    "user_type": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Agent is registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Agent created successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/agents/login": {
            "post": {
                "tags": [
                    "Agent login"
                ],
                "summary": "Method that handles the login of an agent.",
                "description": "logins an existing agent",
                "operationId": "87dccb72af5bd4b5f2fdd01ca1a4f53b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "2345677uu"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Agent is logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "adcxzvbhfredfgh"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/agents/logout": {
            "post": {
                "tags": [
                    "Agent logout"
                ],
                "summary": "Method that handles the logout of an agent.",
                "description": "logout an existing agent",
                "operationId": "b514245f43eea343e95e7d4c627030a9",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Agent is logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "register"
                ],
                "summary": "Method that handles the registration of a user.",
                "description": "registering a user",
                "operationId": "da8643013c2941f5ed7f8a9c9b4a7f7a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "2345677uu"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "2345677uu"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "+249961077805"
                                    },
                                    "user_type": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User is registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "adcxzvbhfredfgh"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "login"
                ],
                "summary": "Method that handles the login of a user.",
                "description": "log a user",
                "operationId": "535ffeda4b78916efd658b2844ea897a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "2345677uu"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User is logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "adcxzvbhfredfgh"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "logout"
                ],
                "summary": "Method that handles the logout of a user.",
                "description": "user is logging out",
                "operationId": "46f8a14c8083abb69eed72768aa08629",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User is logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "you are logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/password/forgot": {
            "post": {
                "tags": [
                    "Forgot Password"
                ],
                "summary": "Method to initiate the password reset process.",
                "description": "forgetting password",
                "operationId": "d9cc70f609b0bb19f5707717a10f266c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Forgotting password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Paasword reset link sent! | failed to send reset link"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/password/reset": {
            "post": {
                "tags": [
                    "Resetting Password"
                ],
                "summary": "Method to reset the user's password.",
                "description": "reset password",
                "operationId": "aee8cc4d69b9a7e99c0472ebcbf0d2aa",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "mmmmmmmm"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "mmmmmmmm"
                                    },
                                    "token": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "mmmmmmxcvveccvvrv"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Resetting password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successful! | Failed to reset password."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/favorites": {
            "get": {
                "tags": [
                    "All Favourites"
                ],
                "summary": "A method to list the user's favorite properties",
                "description": "get the list of favorites",
                "operationId": "c1f59c4abfdf3445e7c58939f93a0482",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get the list of favorites",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All favorites are fetched successfully!"
                                        },
                                        "favorite": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "property_id": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Create Favourite"
                ],
                "summary": "A method to add a property to the user's favorites list",
                "description": "Create a new favorite",
                "operationId": "8fe66ed6a867523e6b0bffe9985759f9",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "property_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Create a new favorite",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "property is added to favorites successfully!"
                                        },
                                        "favorite": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "property_id": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorites/{id}": {
            "delete": {
                "tags": [
                    "Delete Favourite"
                ],
                "summary": "A method to remove a property from the user's favorites list",
                "description": "Delete a favorite",
                "operationId": "d0c793b28205da0bd6d930768e2c31a1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete a favorite",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "property is removed from favorites successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/update-device-token": {
            "put": {
                "tags": [
                    "Update Device Token"
                ],
                "description": "Update device token",
                "operationId": "b7405ff130d8347263c8500f454e902d",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "fcm_token": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "xxxaadddff"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Update device token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Device token is updated successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/send-fcm-notification": {
            "post": {
                "tags": [
                    "Firebase Notification"
                ],
                "description": "Send firebase cloud message notification",
                "operationId": "e86fda002e004dcb3fdb111ab3164009",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "notification 1"
                                    },
                                    "body": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "message 1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Send firebase cloud message notification",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Notification is sent successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/feedback": {
            "post": {
                "tags": [
                    "Submit Feedback"
                ],
                "summary": "submitting feedback",
                "description": "Submit Feedbacks",
                "operationId": "92d6729daca7afa382ce149f7acd500e",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "property_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "rating": {
                                        "type": "string",
                                        "example": "5"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Submit Feedback",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "agents are fetched successfully!"
                                        },
                                        "feedback": {
                                            "properties": {
                                                "rating": {
                                                    "type": "string",
                                                    "example": "5"
                                                },
                                                "comment": {
                                                    "type": "string",
                                                    "example": "This is a feeedback"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/properties/{propertyId}/feedback": {
            "get": {
                "tags": [
                    "Get Feedback about property"
                ],
                "summary": "Method to retrieve feedback for an apartment",
                "description": "Get feedbacks for property",
                "operationId": "90e1f362d5e14225630dfed9bbb61e7f",
                "parameters": [
                    {
                        "name": "propertyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Get feedbacks for property",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Feedbacks for this property is fetched successfully!"
                                        },
                                        "feedback": {
                                            "properties": {
                                                "rating": {
                                                    "type": "string",
                                                    "example": "5"
                                                },
                                                "comment": {
                                                    "type": "string",
                                                    "example": "This is a nice villa"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/upload-image": {
            "post": {
                "tags": [
                    "Image Upload"
                ],
                "description": "Upload an image file",
                "operationId": "63762ba770c26372fe804f1bf6936565",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Storing Images of the system",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "image_path": {
                                            "type": "string",
                                            "example": "path 1"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Image is stored successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/messages/send": {
            "post": {
                "tags": [
                    "Send Messages"
                ],
                "description": "Sending Messages in the system",
                "operationId": "816a9a107d1c7ab2f9b04af172c561b3",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "receiver_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "body": {
                                        "type": "string",
                                        "example": "message"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sending Messages in the system",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "sender_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "receiver_id": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "body": {
                                            "type": "string",
                                            "example": "Hello John Doe"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/messages/{receiverId}": {
            "get": {
                "tags": [
                    "Receive Message"
                ],
                "description": "Receiving Messages",
                "operationId": "bd8775dbf34a3a0799f93f7a784c3040",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Receiving Messages in the system",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "hello 1 , hello 2"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/properties": {
            "get": {
                "tags": [
                    "All properties"
                ],
                "summary": "specifies all the properties in the database",
                "description": "Get all properties",
                "operationId": "ae50890d9da51a5cfe01cd2151d4077a",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "properties are fetched successfully!"
                                        },
                                        "properties": {
                                            "properties": {
                                                "location": {
                                                    "type": "string",
                                                    "example": "Egypt"
                                                },
                                                "property_type": {
                                                    "type": "string",
                                                    "example": "villa"
                                                },
                                                "bedrooms": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "bathrooms": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Store a property"
                ],
                "summary": "creates a new property in the database",
                "description": "Store a property",
                "operationId": "debc241247e30f0490b9e236483217d0",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "property_type": {
                                        "type": "string",
                                        "example": "villa"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "good villa"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "villa 1"
                                    },
                                    "price": {
                                        "type": "string",
                                        "example": 20.5
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Kassala"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create a property",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "property is created successfully!"
                                        },
                                        "property": {
                                            "properties": {
                                                "location": {
                                                    "type": "string",
                                                    "example": "Egypt"
                                                },
                                                "property_type": {
                                                    "type": "string",
                                                    "example": "villa"
                                                },
                                                "bedrooms": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "bathrooms": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/properties/{property}": {
            "get": {
                "tags": [
                    "The details of a property"
                ],
                "summary": "retrieves a specific property from the database",
                "description": "Get the details of a property",
                "operationId": "7e987b4451d73bd2c13bcade3c20cde1",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The details of a property",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "property is fetched successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "location": {
                                                    "type": "string",
                                                    "example": "Egypt"
                                                },
                                                "property_type": {
                                                    "type": "string",
                                                    "example": "villa"
                                                },
                                                "bedrooms": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "bathrooms": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Deletion of a property"
                ],
                "summary": "deletes a specific property from the database",
                "description": "Delete property",
                "operationId": "b5476a186ab6d1421ec465f6bd179c55",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deletion of a property",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "property is deleted successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Update a property"
                ],
                "summary": "updates a specific property in the database",
                "description": "Update a property",
                "operationId": "ec09c871d5a8411590d5a7c8cf318858",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "property_type": {
                                        "type": "string",
                                        "example": "villa"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "good villa"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "villa 1"
                                    },
                                    "price": {
                                        "type": "string",
                                        "example": 20.5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update a property",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "property is updated successfully!"
                                        },
                                        "property": {
                                            "properties": {
                                                "location": {
                                                    "type": "string",
                                                    "example": "Egypt"
                                                },
                                                "property_type": {
                                                    "type": "string",
                                                    "example": "villa"
                                                },
                                                "bedrooms": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "bathrooms": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/properties/feature/{propertyId}": {
            "patch": {
                "tags": [
                    "Featuring Properties"
                ],
                "description": "Featuring Properties",
                "operationId": "6678798c73cbe9094957433bda68bea5",
                "parameters": [
                    {
                        "name": "propertyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Featuring properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "property is featured successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/properties/attach-amenity/{propertyId}/{amenityId}": {
            "put": {
                "tags": [
                    "Attach amenities"
                ],
                "summary": "specifies the attachment of amenity to property",
                "description": "attach amenity",
                "operationId": "09f6a3093d8b3244250bac8d25390f79",
                "parameters": [
                    {
                        "name": "propertyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "amenityId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "attach amenities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The amenity is attached successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/properties/detach-amenity/{propertyId}/{amenityId}": {
            "delete": {
                "tags": [
                    "Detach amenities"
                ],
                "summary": "specifies the detachment of amenity from property",
                "description": "attach amenity",
                "operationId": "d2f5e080cfed352187bcfa603b324c13",
                "parameters": [
                    {
                        "name": "propertyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "amenityId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detach amenities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The amenity is detached successfully!"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/properties/nearby/{userLat}/{userLng}/{radius?}": {
            "get": {
                "tags": [
                    "Nearby Properties"
                ],
                "summary": "Get properties within a specified radius from given coordinates",
                "description": "Get properties within specified radius",
                "operationId": "9fd88cd46dad1d9c91b2814643308d46",
                "parameters": [
                    {
                        "name": "userLat",
                        "in": "path",
                        "description": "User's latitude",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "userLng",
                        "in": "path",
                        "description": "User's latitude",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "userLng",
                        "in": "path",
                        "description": "User's longitude",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "radius",
                        "in": "path",
                        "description": "Search radius in kilometers",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 5
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of nearby properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "title": {
                                                "type": "string"
                                            },
                                            "location": {
                                                "type": "string"
                                            },
                                            "latitude": {
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "longitude": {
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "distance": {
                                                "description": "Distance in kilometers",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/nearby-properties": {
            "get": {
                "tags": [
                    "Nearby Properties"
                ],
                "description": "Get nearby properties based on coordinates",
                "operationId": "3e7eec4d9f72c04d8f280567c7a5b8da",
                "parameters": [
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "User's latitude",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "User's longitude",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "properties": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "location": {
                                                        "type": "string"
                                                    },
                                                    "property_type": {
                                                        "type": "string"
                                                    },
                                                    "latitude": {
                                                        "type": "number"
                                                    },
                                                    "longitude": {
                                                        "type": "number"
                                                    },
                                                    "distance": {
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/recommendations/{propertyId}": {
            "get": {
                "tags": [
                    "All Recommendations"
                ],
                "description": "Get Recommendations",
                "operationId": "5c274594e595c86c6edfc40a2bf6874a",
                "parameters": [
                    {
                        "name": "propertyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all recommendations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "recommended_properties": {
                                            "type": "string",
                                            "example": "[property1 , property2]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/recommendations/{propertyId}/update": {
            "post": {
                "tags": [
                    "Update Recommendations"
                ],
                "description": "Update Recommendations",
                "operationId": "8d4c3bc21e73c01e5a0fb3f8cfc1644d",
                "parameters": [
                    {
                        "name": "propertyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update a recommendations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Recommendation is updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/search/properties": {
            "get": {
                "tags": [
                    "Search Properties"
                ],
                "description": "Search Properties",
                "operationId": "f8d8cef2df212e6929e918cef4991db1",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "properties": {
                                            "properties": {
                                                "location": {
                                                    "type": "string",
                                                    "example": "Egypt"
                                                },
                                                "property_type": {
                                                    "type": "string",
                                                    "example": "villa"
                                                },
                                                "bedrooms": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "bathrooms": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "All Users"
                ],
                "summary": "Display a listing of the resource.",
                "description": "getting all Users",
                "operationId": "c5976bad3b33b4bac3c5b5b26c223ba6",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching all Users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Users are fetched successfully!"
                                        },
                                        "users": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Create a user"
                ],
                "summary": "Store a newly created resource in storage.",
                "description": "Create a user",
                "operationId": "29e2985647b8762606dda4b47c39da39",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "user_type": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Create a user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User is created successfully!"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user}": {
            "delete": {
                "tags": [
                    "Delete a user"
                ],
                "summary": "Remove the specified resource from storage.",
                "description": "Delete a user",
                "operationId": "ce339b8089c57e270fe7e62c4f9ab76e",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Delete a user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User is deleted successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Update a user"
                ],
                "summary": "Update the specified resource in storage.",
                "description": "Update a user",
                "operationId": "b357fa5e7909a3e85893ac87716d68d8",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "+201158972855"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "user_type": {
                                        "type": "string",
                                        "example": "4"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Update a user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User is updated successfully!"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe John"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/visitRequests": {
            "get": {
                "tags": [
                    "Visit Requests"
                ],
                "description": "All visit requests",
                "operationId": "c4dcea50b63ab8c52fe17b20a026a4ba",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All visit requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "property_id": {
                                                    "type": "unsignedBigInteger",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "unsignedBigInteger",
                                                    "example": 2
                                                },
                                                "requested_at": {
                                                    "type": "dateTime",
                                                    "example": -1991
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Create a visist request"
                ],
                "description": "create a visit request",
                "operationId": "541f009c7808f1e3b98573eb28c11744",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "property_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "requested_at": {
                                        "type": "dateTime",
                                        "example": "2024-10-23 17:47:12"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Create a visist request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Visit request created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "property_id": {
                                                    "type": "unsignedBigInteger",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "unsignedBigInteger",
                                                    "example": 2
                                                },
                                                "requested_at": {
                                                    "type": "dateTime",
                                                    "example": -1991
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/visitRequests/{visitRequest}": {
            "patch": {
                "tags": [
                    "Update Visit Request"
                ],
                "description": "Update visit request",
                "operationId": "fd3e64e5445a08dd0c8071f07f09a88f",
                "parameters": [
                    {
                        "name": "visitRequest",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "rescheduled",
                                            "pending",
                                            "approved",
                                            "rejected"
                                        ],
                                        "example": "approved"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update visit request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Visit request status updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "property_id": {
                                                    "type": "unsignedBigInteger",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "unsignedBigInteger",
                                                    "example": 2
                                                },
                                                "requested_at": {
                                                    "type": "dateTime",
                                                    "example": -1991
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "Pending"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "responses": {
            "200": {
                "description": "Updating messages as read messages",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "string",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Mark Message as read"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "parameters": {
            "Authorization": {
                "name": "Authorization",
                "in": "header",
                "description": "Bearer {token}",
                "required": true,
                "schema": {
                    "type": "string"
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Store agents",
            "description": "Store agents"
        },
        {
            "name": "All Amenities",
            "description": "All Amenities"
        },
        {
            "name": "Create an amenity",
            "description": "Create an amenity"
        },
        {
            "name": "Update amenity",
            "description": "Update amenity"
        },
        {
            "name": "Delete amenity",
            "description": "Delete amenity"
        },
        {
            "name": "Nearby amenities",
            "description": "Nearby amenities"
        },
        {
            "name": "Api Key",
            "description": "Api Key"
        },
        {
            "name": "Agent Registeration",
            "description": "Agent Registeration"
        },
        {
            "name": "Agent login",
            "description": "Agent login"
        },
        {
            "name": "Agent logout",
            "description": "Agent logout"
        },
        {
            "name": "register",
            "description": "register"
        },
        {
            "name": "login",
            "description": "login"
        },
        {
            "name": "logout",
            "description": "logout"
        },
        {
            "name": "Forgot Password",
            "description": "Forgot Password"
        },
        {
            "name": "Resetting Password",
            "description": "Resetting Password"
        },
        {
            "name": "Create Favourite",
            "description": "Create Favourite"
        },
        {
            "name": "Delete Favourite",
            "description": "Delete Favourite"
        },
        {
            "name": "All Favourites",
            "description": "All Favourites"
        },
        {
            "name": "Update Device Token",
            "description": "Update Device Token"
        },
        {
            "name": "Firebase Notification",
            "description": "Firebase Notification"
        },
        {
            "name": "Submit Feedback",
            "description": "Submit Feedback"
        },
        {
            "name": "Get Feedback about property",
            "description": "Get Feedback about property"
        },
        {
            "name": "Image Upload",
            "description": "Image Upload"
        },
        {
            "name": "Send Messages",
            "description": "Send Messages"
        },
        {
            "name": "Receive Message",
            "description": "Receive Message"
        },
        {
            "name": "All properties",
            "description": "All properties"
        },
        {
            "name": "Store a property",
            "description": "Store a property"
        },
        {
            "name": "The details of a property",
            "description": "The details of a property"
        },
        {
            "name": "Update a property",
            "description": "Update a property"
        },
        {
            "name": "Deletion of a property",
            "description": "Deletion of a property"
        },
        {
            "name": "Featuring Properties",
            "description": "Featuring Properties"
        },
        {
            "name": "Attach amenities",
            "description": "Attach amenities"
        },
        {
            "name": "Detach amenities",
            "description": "Detach amenities"
        },
        {
            "name": "Nearby Properties",
            "description": "Nearby Properties"
        },
        {
            "name": "All Recommendations",
            "description": "All Recommendations"
        },
        {
            "name": "Update Recommendations",
            "description": "Update Recommendations"
        },
        {
            "name": "Search Properties",
            "description": "Search Properties"
        },
        {
            "name": "All Users",
            "description": "All Users"
        },
        {
            "name": "Create a user",
            "description": "Create a user"
        },
        {
            "name": "Update a user",
            "description": "Update a user"
        },
        {
            "name": "Delete a user",
            "description": "Delete a user"
        },
        {
            "name": "Create a visist request",
            "description": "Create a visist request"
        },
        {
            "name": "Visit Requests",
            "description": "Visit Requests"
        },
        {
            "name": "Update Visit Request",
            "description": "Update Visit Request"
        }
    ]
}